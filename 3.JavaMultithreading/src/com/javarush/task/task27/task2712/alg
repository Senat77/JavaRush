1) В менеджере добавляем поле List<List<Advertisement>> - это список будет хранить все возможные комбинации.
2) В классе Advertisement в конструкторе добавляем проверку на ноль полю amountPerOneDisplaying.
3) В методе processVideos создаем List<Advertisement> - добавляем сюда всю рекламу из нашего хранилища которая имеет
положительное число показов и длительность меньше/равно заказу.
4) Проверяем данный список на наличие рекламы (наша проверка на null).
5) Создаем рекурсивный метод, который переберет данный список и запишет все возможные комбинации рекламы в список
(поле которое мы создали в п.1).
6) Отсеиваем с данного списка все комбинации которые превышают длительность заказа.
7) Сортируем список (п.1) по условию задачи.
8) Сортируем 1 комбинацию из списка п.1. по условию задачи.
9) Выводим рекламу которая лежит в первой ячейке списка из п.1.

Вспомогательные методы:
- Метод для расчета стоимости комбинации рекламы
- Метод для расчета длительности комбинации рекламы

З.Ы.:
* Методы отбора комбинаций можно реализовать по своему, не обязательно рекурсия.
* В классе Advertisement можно создать гетер для поля Hints, валли ругаться не будет, но можно и без него обойтись.

